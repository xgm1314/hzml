"""
Django settings for meilan project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import utils.page

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r!^^50^ip_dn=qvntwyy6-u7j&a(_e8y(uy^v%3nicvb7n+38h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'apps.user',
    'apps.department',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'meilan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'meilan.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
#         'NAME': 'hzml',  # 你要存储数据的库名，事先要创建。
#         'USER': 'root',  # 数据库用户名
#         'PASSWORD': '123456',  # 密码
#         'HOST': '127.0.0.1',  # 默认主机
#         'PORT': '3306',  # 数据库使用的端口
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'USER': 'root',
        'PASSWORD': '123456',
        'NAME': 'hzml'
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# BASE_DIR 是项目的绝对地址
MEDIA_ROOT = os.path.join(BASE_DIR, 'collect_static/img/')  # 用户传入的路径,项目文件夹的下一层目录
MEDIA_URL = '/collect_static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 替换django自带的User模型
AUTH_USER_MODEL = 'user.User'

REST_FRAMEWORK = {  # 在setting中设置的权限不起作用

    'DEFAULT_PERMISSION_CLASSES': [

        # 一、默认用户对所有的业务都有操作权限，即没有权限限制（未指明时默认的权限）
        # 'rest_framework.permissions.AllowAny',

        # 二、仅通过认证的用户才可以访问项目中的接口
        'rest_framework.permissions.IsAuthenticated',

        # 三、仅管理员用户（可以通过admin创建一个用户进行测试）
        # 'rest_framework.permissions.IsAdminUser',

        # 四、未认证的用户只有查权限，经过认证的用户才有增删改的权限
        # 'rest_framework.permissions.IsAuthenticatedOrReadOnly',

    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [  # 认证
        'rest_framework.authentication.SessionAuthentication',  # session认证
    ],
    'DEFAULT_PAGINATION_CLASS': 'utils.page.PageNum',
    'PAGE_SIZE': 10
}
